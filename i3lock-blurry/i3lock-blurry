#!/usr/bin/env bash
# Dependencies: imagemagick, i3lock-color-git, scrot
# vim:fdm=marker

set -o errexit -o noclobber -o nounset

export LC_ALL=C
export LANG=C

HUE=(-level 0%,100%,0.6)
EFFECT=(-filter Gaussian -resize 20% -define filter:sigma=1.5 -resize 500.5%)
# default system sans-serif font
FONT="$(convert -list font | awk "{ a[NR] = \$2 } /family: $(fc-match sans -f "%{family}\n")/ { print a[NR-1]; exit }")"
IMAGE="$(mktemp).png"

# Help text to print{{{
printoptions(){ printf "\nUsage: $(basename $0) [options]\n\n"
cat << EOF
	Options:
    -h, --help   This help menu.
    -g, --greyscale  Set background to greyscale instead of color.
    -p, --pixelate   Pixelate the background instead of blur, runs faster.
    -f <fontname>, --font <fontname>  Set a custom font. Type 'convert -list font' in a terminal to get a list."

EOF
}
#}}}

# move pipefail down as for some reason "convert -list font" returns 1
set -o pipefail
trap 'rm -f "$IMAGE"' EXIT
TEMP="$(getopt -o :hpgf: -l help,pixelate,greyscale,font: --name "$0" -- "$@")"
eval set -- "$TEMP"

# Parse arguments {{{
while true ; do
    case "$1" in
        -h|--help) printoptions ; exit 1 ;;
        -g|--greyscale) HUE=(-level 0%,100%,0.6 -set colorspace Gray -separate -average) ; shift ;;
        -p|--pixelate) EFFECT=(-scale 10% -scale 1000%) ; shift ;;
        -f|--font)
            case "$2" in
                "") shift 2 ;;
                *) FONT=$2 ; shift 2 ;;
            esac ;;
        --) shift ; break ;;
        *) echo "error" ; exit 1 ;;
    esac
done
#}}}

# get path where the script is located to find the lock icon
SCRIPTPATH=$(realpath "$0")
SCRIPTPATH=${SCRIPTPATH%/*}

# Text to display"
TEXT="Type password to unlock"

# Set variables depending on screen brightness {{{
VALUE="60" #brightness value to compare to
scrot -z "$IMAGE"
COLOR=$(convert "$IMAGE" -gravity center -crop 100x100+0+0 +repage -colorspace hsb \
    -resize 1x1 txt:- | awk -F '[%$]' 'NR==2{gsub(",",""); printf "%.0f\n", $(NF-1)}');
if [ "$COLOR" -gt "$VALUE" ]; then #white background image and black text
    BW="black"
    ICON="$SCRIPTPATH/lockdark.png"
    BMICON="$SCRIPTPATH/BMdark.png"
    PARAM=(--textcolor=00000000 --insidecolor=0000001c --ringcolor=0000003e \
        --linecolor=00000000 --keyhlcolor=ffffff80 --ringvercolor=ffffff00 \
        --separatorcolor=22222260 --insidevercolor=ffffff1c \
        --ringwrongcolor=ffffff55 --insidewrongcolor=ffffff1c)
else #black
    BW="white"
    ICON="$SCRIPTPATH/lock.png"
    BMICON="$SCRIPTPATH/BM.png"
    PARAM=(--textcolor=ffffff00 --insidecolor=ffffff1c --ringcolor=ffffff3e \
        --linecolor=ffffff00 --keyhlcolor=00000080 --ringvercolor=00000000 \
        --separatorcolor=22222260 --insidevercolor=0000001c \
        --ringwrongcolor=00000055 --insidewrongcolor=0000001c)
fi
#}}}

# Set variables depending on location {{{
LOCATION=$(< /etc/location)
case $LOCATION in
	BilimMerkezi ) PRINTLINE=($BMICON -gravity center -geometry +0+140 -composite) ;;
	* ) PRINTLINE=(-font "$FONT" -pointsize 26 -fill "$BW" -gravity center -annotate +0+160 "$TEXT") ;;

esac
#}}}

convert "$IMAGE" "${HUE[@]}" "${EFFECT[@]}" \
    "${PRINTLINE[@]}" \
    "$ICON" -gravity center -composite "$IMAGE"

# try to use a forked version of i3lock with prepared parameters
if ! i3lock -n "${PARAM[@]}" -i "$IMAGE" > /dev/null 2>&1; then
    # We have failed, lets get back to stock one
    i3lock -n -i "$IMAGE"
fi
